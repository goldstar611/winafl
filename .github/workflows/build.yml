name: Build
on:
  push:
    branches:
      - master
  workflow_dispatch:

env:
  visual_studio_ver: Visual Studio 16 2019
  
  build32_dir: build32
  build32_drsyms_dir: build32_drsyms
  build64_dir: build64
  build64_drsyms_dir: build64_drsyms
  
  zip_32: winafl_Win32.zip
  zip_drsyms_32: winafl_Win32_drsyms.zip
  zip_64: winafl_x64.zip
  zip_drsyms_64: winafl_x64_drsyms.zip
  
  assets_32: build32\winafl_Win32.zip build32_drsyms\winafl_Win32_drsyms.zip
  assets_64: build64\winafl_x64.zip build64_drsyms\winafl_x64_drsyms.zip

jobs:
  build_winafl:
    runs-on: windows-2019

    steps:
    - uses: actions/checkout@v3

    - name: Add submodules
      run: git submodule update --init --recursive

    - name: Create directories
      run: |
        mkdir ${{env.build32_dir}}
        mkdir ${{env.build32_drsyms_dir}}
        mkdir ${{env.build64_dir}}
        mkdir ${{env.build64_drsyms_dir}}

    - name: Download DynamoRIO
      id: dynamorio
      run: |
        $content = (Invoke-WebRequest https://api.github.com/repos/DynamoRIO/dynamorio/releases/latest).Content
        $download_url = $content | jq -r '.assets[] | select(.browser_download_url | contains(\"DynamoRIO-Windows\")) | .browser_download_url'
        Write-Host "download_url=$download_url"
        Invoke-WebRequest -Uri $download_url -OutFile DynamoRio.zip
        7z x DynamoRio.zip
        mv DynamoRIO-Windows-* DynamoRio-Windows
        Resolve-Path DynamoRio-Windows
        Write-Output "download_url=$download_url" >> "$env:GITHUB_OUTPUT"

    - name: WinAFL 32-bit
      working-directory: ${{env.build32_dir}}
      run: |
        cmake -G"${{env.visual_studio_ver}}" -A Win32 .. -DUSE_COLOR=1 -DDynamoRIO_DIR=..\DynamoRIO-Windows\cmake
        cmake --build . --config Release
        cp ..\*.py .\bin\Release\
        get-item .\bin\Release\*
        get-item ..\DynamoRIO-Windows\cmake
        7z a ${{env.zip_32}} (get-item .\bin\Release\*)

    - name: WinAFL 32-bit (Drsyms support)
      working-directory: ${{env.build32_drsyms_dir}}
      run: |
        cmake -G"${{env.visual_studio_ver}}" -A Win32 .. -DUSE_COLOR=1 -DDynamoRIO_DIR=..\DynamoRIO-Windows\cmake -DUSE_DRSYMS=1
        cmake --build . --config Release
        cp ..\*.py .\bin\Release\
        get-item .\bin\Release\*
        get-item ..\DynamoRIO-Windows\cmake
        7z a ${{env.zip_drsyms_32}} (get-item .\bin\Release\*)
      
    - name: WinAFL 64-bit
      working-directory: ${{env.build64_dir}}
      run: |
        cmake -G"${{env.visual_studio_ver}}" -A x64 .. -DUSE_COLOR=1 -DDynamoRIO_DIR=..\DynamoRIO-Windows\cmake
        cmake --build . --config Release
        cp ..\*.py .\bin\Release\
        get-item .\bin\Release\*
        get-item ..\DynamoRIO-Windows\cmake
        7z a ${{env.zip_64}} (get-item .\bin\Release\*)

    - name: WinAFL 64-bit (Drsyms support)
      working-directory: ${{env.build64_drsyms_dir}}
      run: |
        cmake -G"${{env.visual_studio_ver}}" -A x64 .. -DUSE_COLOR=1 -DDynamoRIO_DIR=..\DynamoRIO-Windows\cmake -DUSE_DRSYMS=1
        cmake --build . --config Release
        cp ..\*.py .\bin\Release\
        get-item .\bin\Release\*
        get-item ..\DynamoRIO-Windows\cmake
        7z a ${{env.zip_drsyms_64}} (get-item .\bin\Release\*)

    - name: Upload release artifacts
      run: |
        gh release create --latest (Get-Date).ToString('yyyy-MM-dd') -n "Compiled using ${{ steps.dynamorio.outputs.download_url }}" ${{env.assets_32}} ${{env.assets_64}}
        if(!($?)) {
          # gh release create failed, maybe the another job in the matrix created it.
          # Try gh release upload instead
          gh release upload --clobber (Get-Date).ToString('yyyy-MM-dd') ${{env.assets_32}} ${{env.assets_64}}
        }
      env:
        GH_REPO: ${{ github.repository }}
        GH_TOKEN: ${{ github.token }}
